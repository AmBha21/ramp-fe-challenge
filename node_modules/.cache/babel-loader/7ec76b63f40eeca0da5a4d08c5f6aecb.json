{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function usePaginatedTransactions() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [paginatedTransactions, setPaginatedTransactions] = useState(null);\n  const [isLoadingTransactions, setIsLoadingTransactions] = useState(false);\n  const fetchAll = useCallback(async () => {\n    setIsLoadingTransactions(true);\n    const response = await fetchWithCache(\"paginatedTransactions\", {\n      page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage\n    });\n\n    if (response && response.nextPage === null) {\n      // If there are no more pages, set paginatedTransactions to null\n      setPaginatedTransactions(null);\n      setIsLoadingTransactions(false);\n      return;\n    }\n\n    setPaginatedTransactions(previousResponse => {\n      if (response === null || previousResponse === null) {\n        return null;\n      }\n\n      return {\n        data: [...previousResponse.data, ...response.data],\n        nextPage: response.nextPage\n      };\n    });\n    setIsLoadingTransactions(false);\n  }, [fetchWithCache, paginatedTransactions]);\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null);\n  }, []);\n  return {\n    data: paginatedTransactions,\n    loading,\n    fetchAll,\n    invalidateData\n  };\n}\n\n_s(usePaginatedTransactions, \"82rZXht+cD6n8C26C8ERnRDy0dY=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","usePaginatedTransactions","fetchWithCache","loading","paginatedTransactions","setPaginatedTransactions","isLoadingTransactions","setIsLoadingTransactions","fetchAll","response","page","nextPage","previousResponse","data","invalidateData"],"sources":["/Users/amolbhagavathi/Downloads/ramp-fe-challenge/src/hooks/usePaginatedTransactions.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { PaginatedRequestParams, PaginatedResponse, Transaction } from \"../utils/types\"\nimport { PaginatedTransactionsResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function usePaginatedTransactions(): PaginatedTransactionsResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [paginatedTransactions, setPaginatedTransactions] = useState<PaginatedResponse<\n    Transaction[]\n  > | null>(null)\n  const [isLoadingTransactions, setIsLoadingTransactions] = useState(false);\n\n  const fetchAll = useCallback(async () => {\n    setIsLoadingTransactions(true);\n    const response = await fetchWithCache<PaginatedResponse<Transaction[]>, PaginatedRequestParams>(\n      \"paginatedTransactions\",\n      {\n        page: paginatedTransactions === null ? 0 : paginatedTransactions.nextPage,\n      }\n    );\n  \n    if (response && response.nextPage === null) {\n      // If there are no more pages, set paginatedTransactions to null\n      setPaginatedTransactions(null);\n      setIsLoadingTransactions(false);\n      return;\n    }\n  \n    setPaginatedTransactions((previousResponse) => {\n      if (response === null || previousResponse === null) {\n        return null;\n      }\n  \n      return {\n        data: [...previousResponse.data, ...response.data],\n        nextPage: response.nextPage,\n      };\n    });\n  \n    setIsLoadingTransactions(false);\n  }, [fetchWithCache, paginatedTransactions]);\n\n  const invalidateData = useCallback(() => {\n    setPaginatedTransactions(null)\n  }, [])\n\n  return { data: paginatedTransactions, loading, fetchAll, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,wBAAT,GAAiE;EAAA;;EACtE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,qBAAD,EAAwBC,wBAAxB,IAAoDN,QAAQ,CAExD,IAFwD,CAAlE;EAGA,MAAM,CAACO,qBAAD,EAAwBC,wBAAxB,IAAoDR,QAAQ,CAAC,KAAD,CAAlE;EAEA,MAAMS,QAAQ,GAAGV,WAAW,CAAC,YAAY;IACvCS,wBAAwB,CAAC,IAAD,CAAxB;IACA,MAAME,QAAQ,GAAG,MAAMP,cAAc,CACnC,uBADmC,EAEnC;MACEQ,IAAI,EAAEN,qBAAqB,KAAK,IAA1B,GAAiC,CAAjC,GAAqCA,qBAAqB,CAACO;IADnE,CAFmC,CAArC;;IAOA,IAAIF,QAAQ,IAAIA,QAAQ,CAACE,QAAT,KAAsB,IAAtC,EAA4C;MAC1C;MACAN,wBAAwB,CAAC,IAAD,CAAxB;MACAE,wBAAwB,CAAC,KAAD,CAAxB;MACA;IACD;;IAEDF,wBAAwB,CAAEO,gBAAD,IAAsB;MAC7C,IAAIH,QAAQ,KAAK,IAAb,IAAqBG,gBAAgB,KAAK,IAA9C,EAAoD;QAClD,OAAO,IAAP;MACD;;MAED,OAAO;QACLC,IAAI,EAAE,CAAC,GAAGD,gBAAgB,CAACC,IAArB,EAA2B,GAAGJ,QAAQ,CAACI,IAAvC,CADD;QAELF,QAAQ,EAAEF,QAAQ,CAACE;MAFd,CAAP;IAID,CATuB,CAAxB;IAWAJ,wBAAwB,CAAC,KAAD,CAAxB;EACD,CA5B2B,EA4BzB,CAACL,cAAD,EAAiBE,qBAAjB,CA5ByB,CAA5B;EA8BA,MAAMU,cAAc,GAAGhB,WAAW,CAAC,MAAM;IACvCO,wBAAwB,CAAC,IAAD,CAAxB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEQ,IAAI,EAAET,qBAAR;IAA+BD,OAA/B;IAAwCK,QAAxC;IAAkDM;EAAlD,CAAP;AACD;;GA1Ceb,wB;UACsBD,c"},"metadata":{},"sourceType":"module"}